// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Microservice used to add the official information in the Employee Account",
    "title": "Employee Managemnt System",
    "contact": {
      "email": "abdul.mueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "ems.swagger.io",
  "basePath": "/v1",
  "paths": {
    "/admin/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Add Official Information to the employee account",
        "operationId": "addEmployee",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unotherized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/delete/{user_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update Official Information to the employee account",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Employee user_id to delete",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteEmployeeOfficial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unotherized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/show/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          },
          "401": {
            "description": "Unotherized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/update/{user_id}": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update Official Information to the employee account",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Employee user_id to update",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateEmployeeOfficial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Update"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unotherized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/employee/show/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "employee"
        ],
        "summary": "show Employee Recoard Self",
        "operationId": "showEmployeeSelf",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/teamLead/showteam/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "teamLead"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showEmployeeTeam",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard of Team Member",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/teamLeadEmployee"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "deleteEmployeeOfficial": {
      "type": "object",
      "required": [
        "job_type"
      ],
      "properties": {
        "job_type": {
          "type": "string",
          "example": "Resign,Terminate"
        }
      }
    },
    "employeeOfficial": {
      "type": "object",
      "required": [
        "user_id",
        "salary",
        "designation",
        "department",
        "team_lead",
        "job_type",
        "health_insurance",
        "life_insurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "health_insurance": {
          "type": "boolean",
          "example": true
        },
        "job_type": {
          "type": "string",
          "example": "Intern"
        },
        "life_insurance": {
          "type": "boolean",
          "example": true
        },
        "salary": {
          "type": "integer",
          "example": 20000
        },
        "team_lead": {
          "type": "string",
          "example": "Kashif Ali"
        },
        "user_id": {
          "type": "string",
          "example": "31202"
        }
      }
    },
    "teamLeadEmployee": {
      "type": "object",
      "required": [
        "designation",
        "department",
        "job_type"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "Golang"
        },
        "designation": {
          "type": "string",
          "example": "Backend Developer"
        },
        "job_type": {
          "type": "string",
          "example": "Interum"
        }
      }
    },
    "updateEmployeeOfficial": {
      "type": "object",
      "required": [
        "salary",
        "designation",
        "department",
        "team_lead",
        "job_type",
        "health_insurance",
        "life_insurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "health_insurance": {
          "type": "boolean",
          "example": true
        },
        "job_type": {
          "type": "string",
          "example": "Intern"
        },
        "life_insurance": {
          "type": "boolean",
          "example": true
        },
        "salary": {
          "type": "integer",
          "example": 20000
        },
        "team_lead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Microservice used to add the official information in the Employee Account",
    "title": "Employee Managemnt System",
    "contact": {
      "email": "abdul.mueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "ems.swagger.io",
  "basePath": "/v1",
  "paths": {
    "/admin/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Add Official Information to the employee account",
        "operationId": "addEmployee",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unotherized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/delete/{user_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update Official Information to the employee account",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Employee user_id to delete",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteEmployeeOfficial"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unotherized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/show/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          },
          "401": {
            "description": "Unotherized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/update/{user_id}": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update Official Information to the employee account",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "type": "string",
            "description": "Employee user_id to update",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateEmployeeOfficial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Update"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unotherized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/employee/show/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "employee"
        ],
        "summary": "show Employee Recoard Self",
        "operationId": "showEmployeeSelf",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/employeeOfficial"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/teamLead/showteam/{user_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "teamLead"
        ],
        "summary": "Show Employee recoard",
        "operationId": "showEmployeeTeam",
        "parameters": [
          {
            "type": "string",
            "description": "Enter user_id to Show the Recoard of Team Member",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "schema": {
              "$ref": "#/definitions/teamLeadEmployee"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "deleteEmployeeOfficial": {
      "type": "object",
      "required": [
        "job_type"
      ],
      "properties": {
        "job_type": {
          "type": "string",
          "example": "Resign,Terminate"
        }
      }
    },
    "employeeOfficial": {
      "type": "object",
      "required": [
        "user_id",
        "salary",
        "designation",
        "department",
        "team_lead",
        "job_type",
        "health_insurance",
        "life_insurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "health_insurance": {
          "type": "boolean",
          "example": true
        },
        "job_type": {
          "type": "string",
          "example": "Intern"
        },
        "life_insurance": {
          "type": "boolean",
          "example": true
        },
        "salary": {
          "type": "integer",
          "example": 20000
        },
        "team_lead": {
          "type": "string",
          "example": "Kashif Ali"
        },
        "user_id": {
          "type": "string",
          "example": "31202"
        }
      }
    },
    "teamLeadEmployee": {
      "type": "object",
      "required": [
        "designation",
        "department",
        "job_type"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "Golang"
        },
        "designation": {
          "type": "string",
          "example": "Backend Developer"
        },
        "job_type": {
          "type": "string",
          "example": "Interum"
        }
      }
    },
    "updateEmployeeOfficial": {
      "type": "object",
      "required": [
        "salary",
        "designation",
        "department",
        "team_lead",
        "job_type",
        "health_insurance",
        "life_insurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "health_insurance": {
          "type": "boolean",
          "example": true
        },
        "job_type": {
          "type": "string",
          "example": "Intern"
        },
        "life_insurance": {
          "type": "boolean",
          "example": true
        },
        "salary": {
          "type": "integer",
          "example": 20000
        },
        "team_lead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    }
  }
}`))
}
